version: '3'

networks:
  database-network:
    name: database-network
    #driver: bridge

  redis-network:
    name: redis-network

  proxy-network:
    name: proxy-network

volumes:
  database_device:
    driver: local
    name: database_device
    driver_opts:
      type: none
      o: bind
      device: $HOME/data/transcendence/volumes/E # FIXME: Why mount here?

  backend_device:
    driver: local
    name: backend_device
    driver_opts:
      type: none
      o: bind
      device: $HOME/docker-data/transcendence/backend

  redis_device:
    driver: local
    name: redis_device
    driver_opts:
      type: none
      o: bind
      device: $HOME/docker-data/transcendence/redis

services:
  database:
    image: postgres:16.0-alpine3.18
    container_name: transc-db
    hostname: ${POSTGRES_DB}
    networks:
      - database-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_URL: ${POSTGRES_URL}
    volumes:
      - database_device:/var/lib/postgresql/data
      - ./database/init-scripts/:/docker-entrypoint-initdb.d/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U '${POSTGRES_USER}' -d '${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 30s
      retries: 30
    restart: always

  backend:
    container_name: backend
    image: backend
    build:
      context: ./backend/
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_MEDIA_URL: ${DJANGO_MEDIA_URL}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_URL: ${POSTGRES_URL}
      REDIS_HOST: ${REDIS_HOST}

      DEFAULT_AVATAR_NAME: ${DEFAULT_AVATAR_NAME}

    volumes:
      - backend_device:/data/
      - ./backend/transc:/app/transc # FIXME: for development to allow editing the code outside the container
    depends_on:
      database:
        condition: service_healthy
    networks:
      - database-network
      - redis-network
      - proxy-network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: ${REDIS_HOST}
    networks:
      - redis-network
    volumes:
      - redis_device:/var/lib/redis
    restart: unless-stopped

  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
    depends_on:
      - backend
    volumes:
      - ./frontend/src/:/app/src/:ro
      - ./frontend/public/:/app/public/:ro
    networks:
      - proxy-network
    restart: unless-stopped

  proxy:
    container_name: proxy
    image: proxy
    build:
      context: ./proxy
    depends_on:
      - backend
      - frontend
    ports:
      - "443:443"
    networks:
      - proxy-network
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - ./.ssl/ssl-cert-snakeoil.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem:ro
      - ./.ssl/ssl-cert-snakeoil.key:/etc/ssl/private/ssl-cert-snakeoil.key:ro
    restart: unless-stopped
